[
  {
    "id": 0,
    "version": 1,
    "name": "Padas - Compiled HTML Access - Rule",
    "description": "Adversaries may hide malicious code in .chm compiled HTML files. When these files are read, Windows uses the HTML help executable named hh.exe, which is the signature for this analytic.",
    "pdl": "winlog.event_data.Image=\"C:\\Windows\\syswow64\\hh.exe\" OR winlog.event_data.Image=\"C:\\Windows\\system32\\hh.exe\"",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1218",
      "T1218.001"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2020-11-009/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "high",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      }
    ]
  },
  {
    "id": 1,
    "version": 1,
    "name": "Padas - Command Launched from WinLogon - Rule",
    "description": "An adversary can use accessibility features (Ease of Access), such as StickyKeys or Utilman, to launch a command shell from the logon screen and gain SYSTEM access.",
    "pdl": "winlog.event_data.Image=\"C:\\Windows\\*\\cmd.exe\" AND winlog.event_data.ParentImage=\"C:\\Windows\\*\\winlogon.exe\"",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1546",
      "T1546.008"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2014-11-008/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "medium",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "parent_exe"
      }
    ]
  },
  {
    "id": 2,
    "version": 1,
    "name": "Padas - Create Remote Process via WMIC - Rule",
    "description": "Adversaries may use Windows Management Instrumentation (WMI) to move laterally, by launching executables remotely.",
    "pdl": "winlog.event_data.Image=\"C:\\Windows\\*\\wmic.exe\" AND winlog.event_data.CommandLine?=\"process call create\" AND winlog.event_data.CommandLine?=\"/node:\"",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1047"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2016-03-002/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "medium",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "command_line"
      }
    ]
  },
  {
    "id": 3,
    "version": 1,
    "name": "Padas - DLL Injection with Mavinject - Rule",
    "description": "The ways of injecting a malicious DLL into a process are numerous, mavinject.exe is a commonly used tool for doing so because it roles up many of the necessary steps into one, and is available within Windows.",
    "pdl": "winlog.event_data.Image?=\"C:\\Windows\\SysWOW64\\mavinject.exe\" OR winlog.event_data.Image?=\"C:\\Windows\\System32\\mavinject.exe\" OR winlog.event_data.CommandLine?=\"INJECTRUNNING\"",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1055",
      "T1055.001"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2020-11-003/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "low",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "command_line"
      }
    ]
  },
  {
    "id": 4,
    "version": 1,
    "name": "Padas - Indicator Blocking - Driver Unloaded - Rule",
    "description": "Adversaries may attempt to evade system defenses by unloading minifilter drivers used by host-based sensors such as Sysmon through the use of the fltmc command-line utility.",
    "pdl": "winlog.event_data.CommandLine?=\"unload\" AND (winlog.event_data.Image=\"C:\\Windows\\SysWOW64\\fltMC.exe\" OR winlog.event_data.Image=\"C:\\Windows\\System32\\fltMC.exe\")",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1562",
      "T1562.006"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2020-09-003/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "medium",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "command_line"
      }
    ]
  },
  {
    "id": 5,
    "version": 1,
    "name": "Padas - Detecting Tampering of Windows Defender Command Prompt - Rule",
    "description": "In an attempt to avoid detection after compromising a machine, threat actors often try to disable Windows Defender. This is often done using \u201Csc\u201D [service control], a legitimate tool provided by Microsoft for managing services.",
    "pdl": "winlog.event_data.Image=\"C:\\Windows\\System32\\sc.exe\" AND (winlog.event_data.CommandLine?=\"*config*\" OR winlog.event_data.CommandLine?=\"*stop*\" OR winlog.event_data.CommandLine?=\"*query*\")",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1562",
      "T1562.001"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2021-01-007/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "medium",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "command_line"
      }
    ]
  },
  {
    "id": 6,
    "version": 1,
    "name": "Padas - Processes Spawning cmd.exe - Rule",
    "description": "The Windows Command Prompt (cmd.exe) is a utility that provides a command line interface to Windows operating systems. There may be automated programs, logon scripts, or administrative tools that launch instances of the command prompt in order to run scripts or other built-in commands. Spawning the process cmd.exe from certain parents may be more indicative of malice.",
    "pdl": "winlog.event_data.Image=\"*\\cmd.exe\"",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1059",
      "T1059.003"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2013-02-003/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "Situational Awareness",
    "severity": "medium",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "parent_exe"
      }
    ]
  },
  {
    "id": 7,
    "version": 1,
    "name": "Padas - Remote PowerShell Sessions - Rule",
    "description": "According to ATT&CK, PowerShell can be used over WinRM to remotely run commands on a host. When a remote PowerShell session starts, svchost.exe executes wsmprovhost.exe",
    "pdl": "winlog.event_data.Image=\"*\\wsmprovhost.exe\" AND winlog.event_data.ParentImage=\"*\\svchost.exe\"",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1059",
      "T1059.001",
      "T1021",
      "T1021.006"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2014-11-004/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "medium",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "parent_exe"
      }
    ]
  },
  {
    "id": 8,
    "version": 1,
    "name": "Padas - RunDLL32.exe monitoring - Rule",
    "description": "Adversaries may find it necessary to use Dynamic-link Libraries (DLLs) to evade defenses. One way these DLLs can be \u201Cexecuted\u201D is through the use of the built-in Windows utility RunDLL32, which allows a user to execute code in a DLL, providing the name and optional arguments to an exported entry point.",
    "pdl": "winlog.event_data.Image=\"*\\rundll32.exe\"",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1218",
      "T1218.011"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2014-03-006/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "medium",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "command_line"
      }
    ]
  },
  {
    "id": 9,
    "version": 1,
    "name": "Padas - Get System Elevation (Meterpreter and Cobalt Strike) - Rule",
    "description": "Cyber actors frequently escalate to the SYSTEM account after gaining entry to a Windows host, to enable them to carry out various attacks more effectively. This analytic looks for techniques to try and attain the system.",
    "pdl": "(winlog.event_data.ParentImage=\"C:\\Windows\\System32\\services.exe\" AND winlog.event_data.Image=\"C:\\Windows\\System32\\cmd.exe\" AND (winlog.event_data.CommandLine= \"*echo*\" AND winlog.event_data.CommandLine= \"*\\pipe\\*\")) OR (winlog.event_data.Image=\"C:\\Windows\\System32\\rundll32.exe\" AND winlog.event_data.CommandLine= \"*,a /p:*\")",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1548"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2021-02-002/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "medium",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "parent_exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "command_line"
      },
      {
        "object": "service",
        "action": "create",
        "field": "command_line"
      }
    ]
  },
  {
    "id": 10,
    "version": 1,
    "name": "Padas - Get System Elevation (Empire and PoshC2) - Rule",
    "description": "Cyber actors frequently escalate to the SYSTEM account after gaining entry to a Windows host, to enable them to carry out various attacks more effectively. This analytic looks for techniques to try and attain the system.",
    "pdl": "(winlog.event_data.Image=\"C:\\Windows\\System32\\cmd.exe\" OR winlog.event_data.CommandLine= \"*%COMSPEC%*\") AND (winlog.event_data.CommandLine= \"*echo*\" AND winlog.event_data.CommandLine= \"*\\pipe\\*\")",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1548"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2021-02-002/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "medium",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "parent_exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "command_line"
      },
      {
        "object": "service",
        "action": "create",
        "field": "command_line"
      }
    ]
  },
  {
    "id": 11,
    "version": 1,
    "name": "Padas - Detecting Shadow Copy Deletion via Vssadmin.exe - Rule",
    "description": "After compromising a network of systems, threat actors often try to delete Shadow Copy in an attempt to prevent administrators from restoring the systems to versions present before the attack. This is often done via vssadmin, a legitimate Windows tool to interact with shadow copies.",
    "pdl": "(winlog.event_data.Image?=\"vssadmin.exe\" AND winlog.event_data.CommandLine=\"*delete*\")",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1490"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2021-01-009/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "low",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "command_line"
      }
    ]
  },
  {
    "id": 12,
    "version": 1,
    "name": "Padas - Disable UAC - Rule",
    "description": "Threat actors often, after compromising a machine, try to disable User Access Control (UAC) to escalate privileges. This is often done by changing the registry key for system policies using \u201Creg.exe\u201D, a legitimate tool provided by Microsoft for modifying the registry via command prompt or scripts.",
    "pdl": "winlog.event_data.ParentImage=\"C:\\Windows\\System32\\cmd.exe\" AND winlog.event_data.CommandLine=\"*reg*HKLM*REG_DWORD* /d 0*\"",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1548",
      "T1548.002"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2021-01-008/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "medium",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "image_path"
      },
      {
        "object": "process",
        "action": "create",
        "field": "command_line"
      }
    ]
  },
  {
    "id": 13,
    "version": 1,
    "name": "Padas - Unusual Child Process for Spoolsv.Exe or Connhost.Exe - Rule",
    "description": "A common way of escalating privileges in a system is by externally invoking and exploiting spoolsv or connhost executables, both of which are legitimate Windows applications. This query searches for an invocation of either of these executables by a user, thus alerting us of any potentially malicious activity.",
    "pdl": "(winlog.event_data.Image=\"C:\\Windows\\System32\\spoolsv.exe*\" OR winlog.event_data.Image=\"C:\\Windows\\System32\\conhost.exe\") AND winlog.event_data.ParentImage=\"C:\\Windows\\System32\\cmd.exe\"",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T068"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2021-01-004/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "Anomaly",
    "severity": "low",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "parent_exe"
      }
    ]
  },
  {
    "id": 14,
    "version": 1,
    "name": "Padas - Unusual Child Process spawned using DDE exploit - Rule",
    "description": "Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. This analytic looks for unusually spawned child process.",
    "pdl": "(winlog.event_data.ParentImage=\"*excel.exe\" OR winlog.event_data.ParentImage=\"*word.exe\" OR winlog.event_data.ParentImage=\"*outlook.exe\") AND winlog.event_data.Image=\"*.exe\"",
    "enabled": false,
    "multievent": false,
    "omitRawdataFromAlerts": false,
    "omitJsondataFromAlerts": false,
    "customAnnotations": [
      "null"
    ],
    "mitreAnnotations": [
      "T1559",
      "T1559.002"
    ],
    "datamodelList": [
      "winlogbeat-sysmon"
    ],
    "references": [
      "https://car.mitre.org/analytics/CAR-2021-01-006/"
    ],
    "platforms": "windows",
    "domain": "endpoint",
    "analyticType": "TTP",
    "severity": "low",
    "datamodelReferences": [
      {
        "object": "process",
        "action": "create",
        "field": "exe"
      },
      {
        "object": "process",
        "action": "create",
        "field": "parent_exe"
      }
    ]
  }
]